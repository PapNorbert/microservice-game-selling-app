import se.bjurr.violations.gradle.plugin.ViolationsGradlePlugin
import se.bjurr.violations.gradle.plugin.ViolationsTask

// checkstyle linting and validations
buildscript {
    repositories {
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath group: 'se.bjurr.violations', name: 'violations-gradle-plugin', version: '1.37'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'checkstyle'
}

apply plugin: ViolationsGradlePlugin

repositories {
    mavenCentral()
}

group 'edu.ubb.consolegamesales'
version '1.0-SNAPSHOT'

dependencies {
//    spring dependencies
    implementation 'org.springframework.boot:spring-boot-starter:3.2.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.2.4'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.4'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.2.4'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.2.4'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.2.4'

    implementation 'redis.clients:jedis:5.1.2'
//    database connection
    implementation 'com.zaxxer:HikariCP:5.0.1'
    runtimeOnly 'com.mysql:mysql-connector-j:8.3.0'
//    lombok
    implementation 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
//    logging
    implementation 'org.slf4j:slf4j-api:2.0.12'
    runtimeOnly 'ch.qos.logback:logback-classic:1.5.3'
//    mapping
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
//    jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
//    jwt serialization and deserialization
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    implementation 'org.springframework.boot:spring-boot-starter-websocket:3.2.4'

}

checkstyle {
    toolVersion = '10.3.4'
    ignoreFailures = true
    showViolations = true
    configProperties = [
            'minSeverity': 'info'
    ]
}

tasks.register('violations', ViolationsTask) {
    maxRuleColumnWidth = 25
    maxMessageColumnWidth = 80

    minSeverity = 'INFO' // INFO, WARN or ERROR
    detailLevel = 'VERBOSE' // PER_FILE_COMPACT, COMPACT or VERBOSE
    maxViolations = 0 // Will fail the build if total number of found violations is higher

    violations = [
            ["CHECKSTYLE", buildDir.path, ".*/checkstyle/.*\\.xml\$", "Checkstyle"]
    ]
}

check.finalizedBy violations