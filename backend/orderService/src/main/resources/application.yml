spring:
  profiles:
    active: jpa
  data:
    redis:
      port: ${REDIS_PORT:6379}
      host: ${REDIS_HOST:localhost}
      password: ${REDIS_PASSWORD:}
      timeout: 5000
      repositories:
        enabled: false
  kafka:
    admin:
      auto-create: true
    bootstrap-servers: ${KAFKA_SERVER:localhost:29092}
    consumer:
      group-id: orderServiceGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.use.type.headers: false
        spring:
          json:
            trusted:
              packages: "edu/ubb/consolegamesales/backend/dto"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    security:
      protocol: ${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
    properties:
      sasl:
        mechanism: SCRAM-SHA-256
        jaas.config: org.apache.kafka.common.security.scram.ScramLoginModule required username="user1" password="${KAFKA_PASSWD:}";

kafkaOrderListOfUserReqTopic: orders-request-topic
kafkaOrdersListAnnouncementsReq: orders-announcements-request-topic
kafkaOrderDataReqConsumeTopic: order-request-topic
kafkaOrderAnnouncementReqProduceTopic: order-announcement-request-topic
kafkaOrderResponseProduceTopic: order-response-topic

kafkaOrderTransactionOrderCreateConsumeTopic: order-transaction-create-order-req-topic
kafkaOrderTransactionOrderCreateProduceTopic: order-transaction-create-order-resp-topic

kafkaOrderTransactionOrderDeleteConsumeTopic: order-transaction-delete-order-req-topic
kafkaOrderTransactionOrderDeleteProduceTopic: order-transaction-delete-order-resp-topic

kafkaOrderTransactionCompensationProduceTopic: order-transaction-compensation-topic


server:
  port: 8083

jwtSecret: 2cdc5639dae1c27de9a074386c5dc8f526fc6c77921d4d34e07a1fceb7cfb9fb