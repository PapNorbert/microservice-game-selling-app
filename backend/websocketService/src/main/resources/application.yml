spring:
  profiles:
    active: jpa
  data:
    redis:
      port: ${REDIS_PORT:6379}
      host: ${REDIS_HOST:localhost}
      timeout: 5000
      repositories:
        enabled: false
  kafka:
    admin:
      auto-create: true
    bootstrap-servers: ${KAFKA_SERVER:localhost:29092}
    consumer:
      group-id: websocketServiceGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.use.type.headers: false
        spring:
          json:
            trusted:
              packages: "edu/ubb/consolegamesales/backend/dto"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer


kafkaMessageSaveProduceTopic: message-save-topic
kafkaMessageHistoryProduceTopic: message-history-request-topic
kafkaMessageHistoryConsumeTopic: message-history-response-topic
kafkaUsersChattedWithResponseConsumeTopic: user-chatted-with-response-topic
kafkaOrdersListAnnouncementsResponseConsumeTopic: orders-announcements-response-topic
kafkaOrderResponseConsumeTopic: order-response-topic

kafkaOrderTransactionRespConsumeTopic: order-transaction-resp-topic


server:
  port: 8084

jwtSecret: 2cdc5639dae1c27de9a074386c5dc8f526fc6c77921d4d34e07a1fceb7cfb9fb

cors:
  allowed-origin:
    ${CORS_ALLOWED_ORIGIN:http://localhost:5173}
